name: Run Python Tests

on: [ push, pull_request ]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3

  test:
    needs: [ pre-commit ]
    strategy:
      fail-fast: true
      matrix:
        os: [ "ubuntu-latest" ]
        python-version: [ "3.9" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction --extras ci

      - name: Static type check with mypy
        run: |
          source .venv/bin/activate
          mypy .
        if: ${{ always() }}

      - name: Test with pytest
        run: |
          source .venv/bin/activate
          pytest \
              --junitxml=./test-reports/junit.xml \
              --cov-report xml:./test-reports/coverage.xml \
              --cov src/kfs \
              --cov tests \
              tests
        if: ${{ always() }}

      - name: Publish code coverage
        run: |
          poetry run codecov -t $CODECOV_TOKEN
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
